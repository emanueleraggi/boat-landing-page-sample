{"ast":null,"code":"var _jsxFileName = \"/home/labrat/cashman-integration/client/src/components/MyDatePicker.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ThemedStyleSheet from 'react-with-styles/lib/ThemedStyleSheet';\nimport aphroditeInterface from 'react-with-styles-interface-aphrodite';\nimport DefaultTheme from 'react-dates/lib/theme/DefaultTheme';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController, DateRangePickerShape, DateRangePickerPhrases, isInclusivelyAfterDay } from 'react-dates';\nimport { START_DATE, END_DATE, HORIZONTAL_ORIENTATION, ANCHOR_LEFT, NAV_POSITION_TOP } from 'react-dates/constants'; // import isInclusivelyAfterDay from 'react-dates/utils/isInclusivelyAfterDay';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n  ...omit(DateRangePickerShape, ['startDate', 'endDate', 'onDatesChange', 'focusedInput', 'onFocusChange'])\n};\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'From',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'To',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n\n  onPrevMonthClick() {},\n\n  onNextMonthClick() {},\n\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: true,\n  isDayBlocked: () => false,\n  isOutsideRange: day => isInclusivelyAfterDay(day, moment().add(1, 'd').subtract(1, 'seconds')),\n  // exclude future date\n  isDayHighlighted: () => false,\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n  stateDateWrapper: date => date\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let focusedInput = null;\n\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n      startDate: props.initialStartDate,\n      endDate: props.initialEndDate\n    };\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  async onDatesChange(interval) {\n    const {\n      startDate,\n      endDate\n    } = interval;\n    const {\n      stateDateWrapper\n    } = this.props;\n    this.setState({\n      startDate: startDate && stateDateWrapper(startDate),\n      endDate: endDate && stateDateWrapper(endDate)\n    });\n\n    if (startDate === null || endDate === null || typeof startDate === 'undefined' || typeof endDate === 'undefined') {\n      this.props.changeCalendarSelected(false);\n      return null;\n    }\n\n    this.props.changeCalendarSelected(true);\n    const dateLower = startDate.toDate();\n    const endDateCopy = endDate.clone();\n    const dateUpper = endDateCopy.add('12', 'hours').toDate(); // include current day\n\n    const response = await fetch('http://localhost:3001/users/vessles/map/latlngdata', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.props.currentShipName,\n        offset: {\n          startDate: dateLower,\n          endDate: dateUpper\n        }\n      })\n    });\n    response.json().then(data => this.props.processShipRangeData(data, 'DateRangePikcer')).catch(err => console.log(err));\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({\n      focusedInput\n    });\n  }\n\n  render() {\n    const {\n      focusedInput,\n      startDate,\n      endDate\n    } = this.state; // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n\n    const props = omit(this.props, ['autoFocus', 'autoFocusEndDate', 'initialStartDate', 'initialEndDate', 'stateDateWrapper']);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DateRangePicker, Object.assign({}, props, {\n      onDatesChange: this.onDatesChange,\n      onFocusChange: this.onFocusChange,\n      focusedInput: focusedInput,\n      startDate: startDate,\n      endDate: endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\nThemedStyleSheet.registerInterface(aphroditeInterface);\nThemedStyleSheet.registerTheme({\n  reactDates: { ...DefaultTheme.reactDates,\n    sizing: {\n      inputWidth: 100,\n      arrowWidth: 15\n    },\n    font: {\n      input: {\n        size: 10,\n        styleDisabled: 'italic'\n      }\n    }\n  }\n});\nexport default DateRangePickerWrapper;","map":{"version":3,"sources":["/home/labrat/cashman-integration/client/src/components/MyDatePicker.js"],"names":["React","PropTypes","momentPropTypes","moment","omit","ThemedStyleSheet","aphroditeInterface","DefaultTheme","DateRangePicker","SingleDatePicker","DayPickerRangeController","DateRangePickerShape","DateRangePickerPhrases","isInclusivelyAfterDay","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","ANCHOR_LEFT","NAV_POSITION_TOP","propTypes","autoFocus","bool","autoFocusEndDate","stateDateWrapper","func","initialStartDate","momentObj","initialEndDate","defaultProps","startDateId","startDatePlaceholderText","endDateId","endDatePlaceholderText","disabled","required","screenReaderInputMessage","showClearDates","showDefaultInputIcon","customInputIcon","customArrowIcon","customCloseIcon","block","small","regular","renderMonthText","orientation","anchorDirection","horizontalMargin","withPortal","withFullScreenPortal","initialVisibleMonth","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDates","isRTL","navPosition","navPrev","navNext","onPrevMonthClick","onNextMonthClick","onClose","renderCalendarDay","undefined","renderDayContents","minimumNights","enableOutsideDays","isDayBlocked","isOutsideRange","day","add","subtract","isDayHighlighted","displayFormat","localeData","longDateFormat","monthFormat","phrases","date","DateRangePickerWrapper","Component","constructor","props","focusedInput","state","startDate","endDate","onDatesChange","bind","onFocusChange","interval","setState","changeCalendarSelected","dateLower","toDate","endDateCopy","clone","dateUpper","response","fetch","method","headers","body","JSON","stringify","name","currentShipName","offset","json","then","data","processShipRangeData","catch","err","console","log","render","registerInterface","registerTheme","reactDates","sizing","inputWidth","arrowWidth","font","input","size","styleDisabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\n\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ThemedStyleSheet from 'react-with-styles/lib/ThemedStyleSheet';\nimport aphroditeInterface from 'react-with-styles-interface-aphrodite';\nimport DefaultTheme from 'react-dates/lib/theme/DefaultTheme';\n\nimport {\n    DateRangePicker,\n    SingleDatePicker,\n    DayPickerRangeController,\n    DateRangePickerShape,\n    DateRangePickerPhrases,\n    isInclusivelyAfterDay\n} from 'react-dates';\n\nimport {\n    START_DATE,\n    END_DATE,\n    HORIZONTAL_ORIENTATION,\n    ANCHOR_LEFT,\n    NAV_POSITION_TOP,\n} from 'react-dates/constants';\n// import isInclusivelyAfterDay from 'react-dates/utils/isInclusivelyAfterDay';\n\nconst propTypes = {\n    // example props for the demo\n    autoFocus: PropTypes.bool,\n    autoFocusEndDate: PropTypes.bool,\n    stateDateWrapper: PropTypes.func,\n    initialStartDate: momentPropTypes.momentObj,\n    initialEndDate: momentPropTypes.momentObj,\n\n    ...omit(DateRangePickerShape, [\n        'startDate',\n        'endDate',\n        'onDatesChange',\n        'focusedInput',\n        'onFocusChange',\n    ]),\n};\n\nconst defaultProps = {\n    // example props for the demo\n    autoFocus: false,\n    autoFocusEndDate: false,\n    initialStartDate: null,\n    initialEndDate: null,\n\n    // input related props\n    startDateId: START_DATE,\n    startDatePlaceholderText: 'From',\n    endDateId: END_DATE,\n    endDatePlaceholderText: 'To',\n    disabled: false,\n    required: false,\n    screenReaderInputMessage: '',\n    showClearDates: false,\n    showDefaultInputIcon: false,\n    customInputIcon: null,\n    customArrowIcon: null,\n    customCloseIcon: null,\n    block: false,\n    small: false,\n    regular: false,\n\n    // calendar presentation and interaction related props\n    renderMonthText: null,\n    orientation: HORIZONTAL_ORIENTATION,\n    anchorDirection: ANCHOR_LEFT,\n    horizontalMargin: 0,\n    withPortal: false,\n    withFullScreenPortal: false,\n    initialVisibleMonth: null,\n    numberOfMonths: 2,\n    keepOpenOnDateSelect: false,\n    reopenPickerOnClearDates: false,\n    isRTL: false,\n\n    // navigation related props\n    navPosition: NAV_POSITION_TOP,\n    navPrev: null,\n    navNext: null,\n    onPrevMonthClick() { },\n    onNextMonthClick() { },\n    onClose() { },\n\n    // day presentation and interaction related props\n    renderCalendarDay: undefined,\n    renderDayContents: null,\n    minimumNights: 1,\n    enableOutsideDays: true,\n    isDayBlocked: () => false,\n    isOutsideRange: day => isInclusivelyAfterDay(day, moment().add(1, 'd').subtract(1, 'seconds')), // exclude future date\n    isDayHighlighted: () => false,\n\n    // internationalization\n    displayFormat: () => moment.localeData().longDateFormat('L'),\n    monthFormat: 'MMMM YYYY',\n    phrases: DateRangePickerPhrases,\n\n    stateDateWrapper: date => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let focusedInput = null;\n        if (props.autoFocus) {\n            focusedInput = START_DATE;\n        } else if (props.autoFocusEndDate) {\n            focusedInput = END_DATE;\n        }\n\n        this.state = {\n            focusedInput,\n            startDate: props.initialStartDate,\n            endDate: props.initialEndDate,\n        };\n\n        this.onDatesChange = this.onDatesChange.bind(this);\n        this.onFocusChange = this.onFocusChange.bind(this);\n    }\n\n    async onDatesChange(interval) {\n        const { startDate, endDate } = interval;\n        const { stateDateWrapper } = this.props;\n        this.setState({\n            startDate: startDate && stateDateWrapper(startDate),\n            endDate: endDate && stateDateWrapper(endDate),\n        });\n\n        if (startDate === null || endDate === null || \n            typeof(startDate) === 'undefined' || typeof(endDate) === 'undefined') {\n                this.props.changeCalendarSelected(false);\n                return null;\n        }\n        this.props.changeCalendarSelected(true);\n        const dateLower = startDate.toDate();\n        const endDateCopy = endDate.clone();\n        const dateUpper = endDateCopy.add('12', 'hours').toDate(); // include current day\n        const response = await fetch('http://localhost:3001/users/vessles/map/latlngdata', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name: this.props.currentShipName,\n                offset: {\n                    startDate: dateLower,\n                    endDate: dateUpper,\n                },\n            }),\n        });\n        response.json().then((data) => this.props.processShipRangeData(data, 'DateRangePikcer')).catch(err => console.log(err))\n    }\n\n    onFocusChange(focusedInput) {\n        this.setState({ focusedInput });\n    }\n\n    render() {\n        const { focusedInput, startDate, endDate } = this.state;\n\n        // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n        // example wrapper but are not props on the SingleDatePicker itself and\n        // thus, have to be omitted.\n        const props = omit(this.props, [\n            'autoFocus',\n            'autoFocusEndDate',\n            'initialStartDate',\n            'initialEndDate',\n            'stateDateWrapper',\n        ]);\n\n        return (\n            <div>\n                <DateRangePicker\n                    {...props}\n                    onDatesChange={this.onDatesChange}\n                    onFocusChange={this.onFocusChange}\n                    focusedInput={focusedInput}\n                    startDate={startDate}\n                    endDate={endDate}\n                />\n            </div>\n        );\n    }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nThemedStyleSheet.registerInterface(aphroditeInterface);\nThemedStyleSheet.registerTheme({\n    reactDates: {\n        ...DefaultTheme.reactDates,\n        sizing: {\n            inputWidth: 100,\n            arrowWidth: 15,\n        },\n        font: {\n            input: {\n                size: 10,\n                styleDisabled: 'italic',\n            }\n        },\n\n    },\n});\n\nexport default DateRangePickerWrapper;"]},"metadata":{},"sourceType":"module"}